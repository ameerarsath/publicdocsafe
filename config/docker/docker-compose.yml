version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: securevault_db
    environment:
      POSTGRES_DB: securevault
      POSTGRES_USER: securevault_user
      POSTGRES_PASSWORD: securevault_password
    ports:
      - "5430:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U securevault_user -d securevault"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - securevault_network

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    container_name: securevault_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - securevault_network

  # Backend API (FastAPI)
  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile
    container_name: securevault_backend
    environment:
      - DATABASE_URL=postgresql://securevault_user:securevault_password@db:5432/securevault
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - SECRET_KEY=your-super-secret-key-change-in-production
      - ENVIRONMENT=development
    ports:
      - "8002:8000"
    volumes:
      - ../../backend:/app
      - ../../data/files:/app/encrypted-files
      - ../../data/backups:/app/backups
      - ../../data/temp:/app/temp
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - securevault_network

  # Frontend (React + Vite)
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    container_name: securevault_frontend
    environment:
      - VITE_API_URL=http://localhost:8002
      - VITE_APP_TITLE=SecureVault
    ports:
      - "3005:3000"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - securevault_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: securevault_nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
      - ../../data/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - securevault_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  securevault_network:
    driver: bridge